function Banner(){this.bannerWidth=798,this.index=1,this.bannerUl=$("#banner-ul"),this.liList=this.bannerUl.children("li"),this.bannerCount=this.liList.length,this.bannerGroup=$("#banner-group"),this.rightArrow=$(".right-arrow"),this.leftArrow=$(".left-arrow"),this.pageControl=$(".page-control")}function NewsTab(){}function Index(){this.page=2,this.category_id=0,this.loadBtn=$("#load-more-btn"),template.defaults.imports.timeSince=function(n){var t=new Date(n),e=t.getTime(),i=((new Date).getTime()-e)/1e3;if(i<60)return"刚刚";if(60<=i&&i<3600)return minutes=parseInt(i/60),minutes+"分钟前";if(3600<=i&&i<86400)return hours=parseInt(i/60/60),hours+"小时前";if(86400<=i&&i<2592e3)return days=parseInt(i/60/60/24),days+"天前";var r=t.getFullYear(),a=t.getMonth()+1,o=t.getDate(),s=t.getHours(),l=t.getMinutes();return 0<a&&a<10&&(a="0"+a),0<o&&o<10&&(o="0"+o),0<s&&s<10&&(s="0"+s),0<l&&l<10&&(l="0"+l),r+"/"+a+"/"+o+" "+s+":"+l}}Banner.prototype.run=function(){this.initBanner(),this.initPageControl(),this.loop(),this.listenBannerHover(),this.listenArrowClick(),this.listenPageControlClick()},Banner.prototype.initBanner=function(){var n=this,t=n.liList.eq(0).clone(),e=n.liList.eq(n.bannerCount-1).clone();n.bannerUl.append(t),n.bannerUl.prepend(e),n.bannerUl.css({width:n.bannerWidth*(n.bannerCount+2)}),n.bannerUl.css({left:-n.bannerWidth})},Banner.prototype.animates=function(){var n=this,t=n.index;t=t===n.bannerCount+1?0:0===t?n.bannerCount-1:n.index-1,n.bannerUl.stop().animate({left:-n.bannerWidth*n.index},500),n.pageControl.children("li").eq(t).addClass("active").siblings().removeClass("active")},Banner.prototype.loop=function(){var n=this;this.items=setInterval(function(){n.index<n.bannerCount+1?n.index++:(n.bannerUl.css({left:-n.bannerWidth}),n.index=2),n.animates()},2e3)},Banner.prototype.listenBannerHover=function(){var n=this;n.bannerGroup.hover(function(){n.toggleArrow(!0),clearInterval(n.items)},function(){n.toggleArrow(!1),n.loop()})},Banner.prototype.toggleArrow=function(n){var t=this;n?(t.rightArrow.show(),t.leftArrow.show()):(t.rightArrow.hide(),t.leftArrow.hide())},Banner.prototype.listenArrowClick=function(){var n=this;n.rightArrow.click(function(){n.index>=n.bannerCount?(n.index=1,n.bannerUl.css({left:0})):n.index++,n.animates()}),n.leftArrow.click(function(){0===n.index?(n.index=n.bannerCount-1,n.bannerUl.css({left:-n.bannerCount*n.bannerWidth})):n.index--,n.animates()})},Banner.prototype.initPageControl=function(){var n=this;n.pageControl.css({width:26*n.bannerCount});for(var t=0;t<n.bannerCount;t++){var e=$("<li></li>");n.pageControl.append(e),0===t&&e.addClass("active")}},Banner.prototype.listenPageControlClick=function(){var e=this;e.pageControl.children("li").each(function(n,t){$(t).click(function(){e.index=n+1,e.animates()})})},NewsTab.prototype.run=function(){this.listenTableClick(),this.initTable()},NewsTab.prototype.initTable=function(){$(".list-tab").children("li").eq(0).addClass("active")},NewsTab.prototype.listenTableClick=function(){var e=$(".list-tab");e.children("li").eq(0).addClass("active"),e.children("li").each(function(n,t){$(t).click(function(){e.children("li").eq(n).addClass("active").siblings().removeClass("active")})})},Index.prototype.loadMoreBtn=function(){var i=this;i.loadBtn.click(function(){xfzajax.get({url:"/news/list/",data:{page:i.page,category_id:i.category_id},success:function(n){if(200===n.code){var t=n.data;if(0<t.length){var e=template("news-item",{newses:t});$(".list-inner-group").append(e),i.page++}else i.loadBtn.hide()}}})})},Index.prototype.listenCategorySwitchEvent=function(){var a=this;$(".list-tab").children().click(function(){var r=$(this).attr("data-category");a.loadBtn.show(),xfzajax.get({url:"/news/list/",data:{page:1,category_id:r},success:function(n){if(200===n.code){var t=n.data,e=template("news-item",{newses:t}),i=$(".list-inner-group");i.empty(),i.append(e),a.page=2,a.category_id=r}}})})},Index.prototype.run=function(){this.loadMoreBtn(),this.listenCategorySwitchEvent()},$(function(){var n=new Banner,t=new NewsTab,e=new Index;t.run(),n.run(),e.run()});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbIkJhbm5lciIsInRoaXMiLCJiYW5uZXJXaWR0aCIsImluZGV4IiwiYmFubmVyVWwiLCIkIiwibGlMaXN0IiwiY2hpbGRyZW4iLCJiYW5uZXJDb3VudCIsImxlbmd0aCIsImJhbm5lckdyb3VwIiwicmlnaHRBcnJvdyIsImxlZnRBcnJvdyIsInBhZ2VDb250cm9sIiwiTmV3c1RhYiIsIkluZGV4IiwicGFnZSIsImNhdGVnb3J5X2lkIiwibG9hZEJ0biIsInRlbXBsYXRlIiwiZGVmYXVsdHMiLCJpbXBvcnRzIiwidGltZVNpbmNlIiwiZGF0ZVZhbHVlIiwiZGF0ZSIsIkRhdGUiLCJkYXRldHMiLCJnZXRUaW1lIiwidGltZXN0YW1wIiwibWludXRlcyIsInBhcnNlSW50IiwiaG91cnMiLCJkYXlzIiwieWVhciIsImdldEZ1bGxZZWFyIiwibW9udGgiLCJnZXRNb250aCIsImRheSIsImdldERhdGUiLCJob3VyIiwiZ2V0SG91cnMiLCJtaW4iLCJnZXRNaW51dGVzIiwicHJvdG90eXBlIiwicnVuIiwiaW5pdEJhbm5lciIsImluaXRQYWdlQ29udHJvbCIsImxvb3AiLCJsaXN0ZW5CYW5uZXJIb3ZlciIsImxpc3RlbkFycm93Q2xpY2siLCJsaXN0ZW5QYWdlQ29udHJvbENsaWNrIiwic2VsZiIsImZpcnN0YmFubmVyIiwiZXEiLCJjbG9uZSIsImxhc3RiYW5uZXIiLCJhcHBlbmQiLCJwcmVwZW5kIiwiY3NzIiwid2lkdGgiLCJsZWZ0IiwiYW5pbWF0ZXMiLCJzdG9wIiwiYW5pbWF0ZSIsImFkZENsYXNzIiwic2libGluZ3MiLCJyZW1vdmVDbGFzcyIsIml0ZW1zIiwic2V0SW50ZXJ2YWwiLCJob3ZlciIsInRvZ2dsZUFycm93IiwiY2xlYXJJbnRlcnZhbCIsImlzU2hvdyIsInNob3ciLCJoaWRlIiwiY2xpY2siLCJpIiwiY2lyY2xlIiwiZWFjaCIsIm9iaiIsImxpc3RlblRhYmxlQ2xpY2siLCJpbml0VGFibGUiLCJ0YWJsZSIsImxvYWRNb3JlQnRuIiwieGZ6YWpheCIsImdldCIsInVybCIsImRhdGEiLCJzdWNjZXNzIiwicmVzdWx0IiwidHBsIiwibmV3c2VzIiwibGlzdGVuQ2F0ZWdvcnlTd2l0Y2hFdmVudCIsImF0dHIiLCJ1bCIsImVtcHR5IiwiYmFubmVyIl0sIm1hcHBpbmdzIjoiQUFDQSxTQUFTQSxTQUNMQyxLQUFLQyxZQUFjLElBQ25CRCxLQUFLRSxNQUFRLEVBRWJGLEtBQUtHLFNBQVdDLEVBQUUsY0FDbEJKLEtBQUtLLE9BQVNMLEtBQUtHLFNBQVNHLFNBQVMsTUFDckNOLEtBQUtPLFlBQWNQLEtBQUtLLE9BQU9HLE9BQy9CUixLQUFLUyxZQUFjTCxFQUFFLGlCQUNyQkosS0FBS1UsV0FBYU4sRUFBRSxnQkFDcEJKLEtBQUtXLFVBQVlQLEVBQUUsZUFDbkJKLEtBQUtZLFlBQWNSLEVBQUUsaUJBb0p6QixTQUFTUyxXQTRCVCxTQUFTQyxRQUNMZCxLQUFLZSxLQUFPLEVBQ1pmLEtBQUtnQixZQUFjLEVBRW5CaEIsS0FBS2lCLFFBQVViLEVBQUUsa0JBRWpCYyxTQUFTQyxTQUFTQyxRQUFRQyxVQUFZLFNBQVVDLEdBQzVDLElBQUlDLEVBQU8sSUFBSUMsS0FBS0YsR0FDaEJHLEVBQVNGLEVBQUtHLFVBRWRDLElBRFMsSUFBS0gsTUFBUUUsVUFDQUQsR0FBVSxJQUNwQyxHQUFJRSxFQUFZLEdBQ1osTUFBTyxLQUNMLEdBQWlCLElBQWJBLEdBQW1CQSxFQUFZLEtBRXJDLE9BREFDLFFBQVVDLFNBQVNGLEVBQVUsSUFDdEJDLFFBQVEsTUFDYixHQUFpQixNQUFiRCxHQUFzQkEsRUFBWSxNQUV4QyxPQURBRyxNQUFRRCxTQUFTRixFQUFZLEdBQUssSUFDM0JHLE1BQU0sTUFDWCxHQUFpQixPQUFiSCxHQUF5QkEsRUFBWSxPQUUzQyxPQURBSSxLQUFPRixTQUFTRixFQUFZLEdBQUssR0FBSyxJQUMvQkksS0FBTyxLQUVkLElBQUlDLEVBQU9ULEVBQUtVLGNBQ1pDLEVBQVFYLEVBQUtZLFdBQWEsRUFDMUJDLEVBQU1iLEVB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Q2JDLFlBQWVrQyxFQUFLbEMsYUFFeEJ1RSxRQUFVLFNBQVVDLEdBQ2hCLEdBQXVCLE1BQW5CQSxFQUFhLEtBQVcsQ0FDeEIsSUFBSUYsRUFBT0UsRUFBYSxLQUN4QixHQUFrQixFQUFkRixFQUFLOUUsT0FBVyxDQUNoQixJQUFJaUYsRUFBTXZFLFNBQVMsWUFBYSxDQUFDd0UsT0FBVUosSUFDbENsRixFQUFFLHFCQUNSbUQsT0FBT2tDLEdBQ1Z2QyxFQUFLbkMsWUFFTG1DLEVBQUtqQyxRQUFRd0QsY0FTckMzRCxNQUFNNEIsVUFBVWlELDBCQUE0QixXQUN4QyxJQUFJekMsRUFBT2xELEtBQ0ZJLEVBQUUsYUFDUkUsV0FBV29FLE1BQU0sV0FDaEIsSUFDSTFELEVBREtaLEVBQUVKLE1BQ1U0RixLQUFLLGlCQUUxQjFDLEVBQUtqQyxRQUFRdUQsT0FDYlcsUUFBUUMsSUFBSSxDQUNSQyxJQUFPLGNBQ1BDLEtBQVEsQ0FDSnZFLEtBTEcsRUFNSEMsWUFBZUEsR0FFbkJ1RSxRQUFXLFNBQVVDLEdBQ2pCLEdBQXVCLE1BQW5CQSxFQUFhLEtBQVcsQ0FDeEIsSUFBSUYsRUFBT0UsRUFBYSxLQUNwQkMsRUFBTXZFLFNBQVMsWUFBYSxDQUFDd0UsT0FBVUosSUFDdkNPLEVBQUt6RixFQUFFLHFCQUNYeUYsRUFBR0MsUUFDSEQsRUFBR3RDLE9BQU9rQyxHQUNWdkMsRUFBS25DLEtBQU8sRUFDWm1DLEVBQUtsQyxZQUFjQSxTQVF2Q0YsTUFBTTRCLFVBQVVDLElBQU0sV0FDbEIzQyxLQUFLa0YsY0FDTGxGLEtBQUsyRiw2QkFNVHZGLEVBQUUsV0FDQyxJQUFJMkYsRUFBUyxJQUFJaEcsT0FDYmtGLEVBQVEsSUFBSXBFLFFBQ1pYLEVBQVEsSUFBSVksTUFDaEJtRSxFQUFNdEMsTUFDTm9ELEVBQU9wRCxNQUNQekMsRUFBTXlDIiwiZmlsZSI6ImluZGV4Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuZnVuY3Rpb24gQmFubmVyKCkge1xuICAgIHRoaXMuYmFubmVyV2lkdGggPSA3OTg7XG4gICAgdGhpcy5pbmRleCA9IDE7XG5cbiAgICB0aGlzLmJhbm5lclVsID0gJCgnI2Jhbm5lci11bCcpO1xuICAgIHRoaXMubGlMaXN0ID0gdGhpcy5iYW5uZXJVbC5jaGlsZHJlbignbGknKTtcbiAgICB0aGlzLmJhbm5lckNvdW50ID0gdGhpcy5saUxpc3QubGVuZ3RoO1xuICAgIHRoaXMuYmFubmVyR3JvdXAgPSAkKCcjYmFubmVyLWdyb3VwJyk7XG4gICAgdGhpcy5yaWdodEFycm93ID0gJCgnLnJpZ2h0LWFycm93Jyk7XG4gICAgdGhpcy5sZWZ0QXJyb3cgPSAkKCcubGVmdC1hcnJvdycpO1xuICAgIHRoaXMucGFnZUNvbnRyb2wgPSAkKCcucGFnZS1jb250cm9sJyk7XG5cblxufVxuXG5cbkJhbm5lci5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24oKXtcblxuICAgIHRoaXMuaW5pdEJhbm5lcigpO1xuICAgIHRoaXMuaW5pdFBhZ2VDb250cm9sKCk7XG4gICAgdGhpcy5sb29wKCk7XG5cbiAgICB0aGlzLmxpc3RlbkJhbm5lckhvdmVyKCk7XG4gICAgdGhpcy5saXN0ZW5BcnJvd0NsaWNrKCk7XG4gICAgdGhpcy5saXN0ZW5QYWdlQ29udHJvbENsaWNrKCk7XG5cbn07XG5cblxuXG4vLyDliJ3lp4vljJZiYW5uZXJcbkJhbm5lci5wcm90b3R5cGUuaW5pdEJhbm5lciA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHZhciBmaXJzdGJhbm5lciA9IHNlbGYubGlMaXN0LmVxKDApLmNsb25lKCk7XG4gICAgdmFyIGxhc3RiYW5uZXIgPSBzZWxmLmxpTGlzdC5lcShzZWxmLmJhbm5lckNvdW50LTEpLmNsb25lKCk7XG4gICAgc2VsZi5iYW5uZXJVbC5hcHBlbmQoZmlyc3RiYW5uZXIpO1xuICAgIHNlbGYuYmFubmVyVWwucHJlcGVuZChsYXN0YmFubmVyKTtcblxuICAgIHNlbGYuYmFubmVyVWwuY3NzKHsnd2lkdGgnOiBzZWxmLmJhbm5lcldpZHRoKihzZWxmLmJhbm5lckNvdW50KzIpfSk7XG4gICAgc2VsZi5iYW5uZXJVbC5jc3MoeydsZWZ0JzogLXNlbGYuYmFubmVyV2lkdGh9KVxuXG59O1xuXG4vLyDmu5HliqhiYW5uZXJcbkJhbm5lci5wcm90b3R5cGUuYW5pbWF0ZXMgPSBmdW5jdGlvbigpe1xuICAgIHZhciBzZWxmID0gdGhpcztcbiAgICB2YXIgaW5kZXggPSBzZWxmLmluZGV4O1xuICAgIGlmIChpbmRleCA9PT0gc2VsZi5iYW5uZXJDb3VudCsxKXtcbiAgICAgICAgaW5kZXggPSAwO1xuICAgIH1lbHNlIGlmIChpbmRleCA9PT0gMCl7XG4gICAgICAgIGluZGV4ID0gc2VsZi5iYW5uZXJDb3VudCAtIDE7XG4gICAgfSBlbHNlIHtcbiAgICAgICAgaW5kZXggPSBzZWxmLmluZGV4IC0gMTtcbiAgICB9XG5cbiAgICBzZWxmLmJhbm5lclVsLnN0b3AoKS5hbmltYXRlKHsnbGVmdCc6IC1zZWxmLmJhbm5lcldpZHRoKnNlbGYuaW5kZXh9LCA1MDApO1xuICAgIHNlbGYucGFnZUNvbnRyb2wuY2hpbGRyZW4oJ2xpJykuZXEoaW5kZXgpLmFkZENsYXNzKCdhY3RpdmUnKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKVxuXG59O1xuXG4vL+WumuaXtuaJp+ihjOi9ruaSrVxuQmFubmVyLnByb3RvdHlwZS5sb29wID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdGhpcy5pdGVtcyA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHNlbGYuaW5kZXggPCBzZWxmLmJhbm5lckNvdW50KzEpe1xuICAgICAgICAgICAgc2VsZi5pbmRleCsrO1xuICAgICAgICB9ZWxzZSB7XG4gICAgICAgICAgICBzZWxmLmJhbm5lclVsLmNzcyh7J2xlZnQnOiAtc2VsZi5iYW5uZXJXaWR0aH0pO1xuICAgICAgICAgICAgc2VsZi5pbmRleCA9IDI7XG5cbiAgICAgICAgfVxuICAgICAgICBzZWxmLmFuaW1hdGVzKCk7XG5cblxuICAgIH0sIDIwMDApXG59O1xuXG4vL+m8oOagh+enu+WFpeebkeWQrFxuQmFubmVyLnByb3RvdHlwZS5saXN0ZW5CYW5uZXJIb3ZlciA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHNlbGYuYmFubmVyR3JvdXAuaG92ZXIoZnVuY3Rpb24gKCkge1xuICAgICAgICBzZWxmLnRvZ2dsZUFycm93KHRydWUpO1xuICAgICAgICBjbGVhckludGVydmFsKHNlbGYuaXRlbXMpXG4gICAgfSwgZnVuY3Rpb24gKCkge1xuICAgICAgICBzZWxmLnRvZ2dsZUFycm93KGZhbHNlKTtcbiAgICAgICAgc2VsZi5sb29wKClcbiAgICB9KVxufTtcblxuLy8g5piv5ZCm5pi+56S6566t5aS0XG5CYW5uZXIucHJvdG90eXBlLnRvZ2dsZUFycm93ID0gZnVuY3Rpb24oaXNTaG93KXtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgaWYoaXNTaG93KXtcbiAgICAgICAgc2VsZi5yaWdodEFycm93LnNob3coKTtcbiAgICAgICAgc2VsZi5sZWZ0QXJyb3cuc2hvdygpO1xuICAgIH1lbHNlIHtcbiAgICAgICAgc2VsZi5yaWdodEFycm93LmhpZGUoKTtcbiAgICAgICAgc2VsZi5sZWZ0QXJyb3cuaGlkZSgpO1xuICAgIH1cbn07XG5cbi8vIOeureWktOeCueWHu+S6i+S7tlxuQmFubmVyLnByb3RvdHlwZS5saXN0ZW5BcnJvd0NsaWNrID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgc2VsZi5yaWdodEFycm93LmNsaWNrKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgaWYgKHNlbGYuaW5kZXggPj0gc2VsZi5iYW5uZXJDb3VudCl7XG4gICAgICAgICAgICBzZWxmLmluZGV4ID0gMTtcbiAgICAgICAgICAgIHNlbGYuYmFubmVyVWwuY3NzKHsnbGVmdCc6IDB9KTtcbiAgICAgICAgfWVsc2Uge1xuICAgICAgICAgICAgc2VsZi5pbmRleCsrO1xuICAgICAgICB9XG4gICAgICAgIHNlbGYuYW5pbWF0ZXMoKTtcbiAgICB9KTtcbiAgICBzZWxmLmxlZnRBcnJvdy5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIGlmIChzZWxmLmluZGV4ID09PSAwKXtcbiAgICAgICAgICAgIHNlbGYuaW5kZXggPSBzZWxmLmJhbm5lckNvdW50LTE7XG5cbiAgICAgICAgICAgIHNlbGYuYmFubmVyVWwuY3NzKHsnbGVmdCc6IC1zZWxmLmJhbm5lckNvdW50KnNlbGYuYmFubmVyV2lkdGh9KVxuICAgICAgICB9ZWxzZSB7XG4gICAgICAgICAgICBzZWxmLmluZGV4LS07XG4gICAgICAgIH07XG4gICAgICAgIHNlbGYuYW5pbWF0ZXMoKTtcbiAgICB9KTtcblxufTtcblxuLy8g6Ieq5Yqo55Sf5oiQ5bCP5ZyG54K5XG5CYW5uZXIucHJvdG90eXBlLmluaXRQYWdlQ29udHJvbCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHNlbGYucGFnZUNvbnRyb2wuY3NzKHsnd2lkdGgnOiBzZWxmLmJhbm5lckNvdW50KjI2fSk7XG4gICAgZm9yICh2YXIgaT0wOyBpPHNlbGYuYmFubmVyQ291bnQ7IGkrKyl7XG4gICAgICAgIHZhciBjaXJjbGUgPSAkKCc8bGk+PC9saT4nKTtcbiAgICAgICAgc2VsZi5wYWdlQ29udHJvbC5hcHBlbmQoY2lyY2xlKTtcblxuICAgICAgICBpZiAoaSA9PT0gMCApe1xuICAgICAgICAgICAgY2lyY2xlLmFkZENsYXNzKCdhY3RpdmUnKVxuICAgICAgICB9XG4gICAgfVxuXG59O1xuXG4vLyDlsI/lnIbngrnngrnlh7vkuovku7ZcbkJhbm5lci5wcm90b3R5cGUubGlzdGVuUGFnZUNvbnRyb2xDbGljayA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHNlbGYucGFnZUNvbnRyb2wuY2hpbGRyZW4oJ2xpJykuZWFjaChmdW5jdGlvbiAoaW5kZXgsIG9iaikge1xuICAgICAgICAkKG9iaikuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgc2VsZi5pbmRleCA9IGluZGV4ICsgMTtcbiAgICAgICAgICAgIHNlbGYuYW5pbWF0ZXMoKVxuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG5cblxuXG5cblxuXG4vLyDnu4bnurnlsI/lr7zoiKrmnaFcbmZ1bmN0aW9uIE5ld3NUYWIoKXtcblxufTtcblxuTmV3c1RhYi5wcm90b3R5cGUucnVuID0gZnVuY3Rpb24oKXtcbiAgICB0aGlzLmxpc3RlblRhYmxlQ2xpY2soKTtcbiAgICB0aGlzLmluaXRUYWJsZSgpXG59O1xuXG5cbk5ld3NUYWIucHJvdG90eXBlLmluaXRUYWJsZSA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHRhYmxlID0gJCgnLmxpc3QtdGFiJyk7XG4gICAgdGFibGUuY2hpbGRyZW4oJ2xpJykuZXEoMCkuYWRkQ2xhc3MoJ2FjdGl2ZScpO1xufTtcblxuTmV3c1RhYi5wcm90b3R5cGUubGlzdGVuVGFibGVDbGljayA9IGZ1bmN0aW9uKCl7XG4gICAgIHZhciB0YWJsZSA9ICQoJy5saXN0LXRhYicpO1xuICAgICB0YWJsZS5jaGlsZHJlbignbGknKS5lcSgwKS5hZGRDbGFzcygnYWN0aXZlJyk7XG4gICAgdGFibGUuY2hpbGRyZW4oJ2xpJykuZWFjaChmdW5jdGlvbiAoaW5kZXgsIG9iaikge1xuICAgICAgICAkKG9iaikuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgdGFibGUuY2hpbGRyZW4oJ2xpJykuZXEoaW5kZXgpLmFkZENsYXNzKCdhY3RpdmUnKS5zaWJsaW5ncygpLnJlbW92ZUNsYXNzKCdhY3RpdmUnKTtcbiAgICAgICAgfSk7XG4gICAgfSlcbn07XG5cblxuXG5cbmZ1bmN0aW9uIEluZGV4KCl7XG4gICAgdGhpcy5wYWdlID0gMjtcbiAgICB0aGlzLmNhdGVnb3J5X2lkID0gMDtcblxuICAgIHRoaXMubG9hZEJ0biA9ICQoJyNsb2FkLW1vcmUtYnRuJyk7XG5cbiAgICB0ZW1wbGF0ZS5kZWZhdWx0cy5pbXBvcnRzLnRpbWVTaW5jZSA9IGZ1bmN0aW9uIChkYXRlVmFsdWUpIHtcbiAgICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShkYXRlVmFsdWUpO1xuICAgICAgICB2YXIgZGF0ZXRzID0gZGF0ZS5nZXRUaW1lKCk7XG4gICAgICAgIHZhciBub3dzdHMgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpO1xuICAgICAgICB2YXIgdGltZXN0YW1wID0gKG5vd3N0cyAtIGRhdGV0cykgLyAxMDAwO1xuICAgICAgICBpZiAodGltZXN0YW1wIDwgNjApIHtcbiAgICAgICAgICAgIHJldHVybiAn5Yia5YiaJ1xuICAgICAgICB9ZWxzZSBpZiAodGltZXN0YW1wID49IDYwICYmIHRpbWVzdGFtcCA8IDYwKjYwKXtcbiAgICAgICAgICAgIG1pbnV0ZXMgPSBwYXJzZUludCh0aW1lc3RhbXAvNjApO1xuICAgICAgICAgICAgcmV0dXJuIG1pbnV0ZXMrJ+WIhumSn+WJjSdcbiAgICAgICAgfWVsc2UgaWYgKHRpbWVzdGFtcCA+PSA2MCo2MCAmJiB0aW1lc3RhbXAgPCA2MCo2MCoyNCkge1xuICAgICAgICAgICAgaG91cnMgPSBwYXJzZUludCh0aW1lc3RhbXAgLyA2MCAvIDYwKTtcbiAgICAgICAgICAgIHJldHVybiBob3Vycysn5bCP5pe25YmNJ1xuICAgICAgICB9ZWxzZSBpZiAodGltZXN0YW1wID49IDYwKjYwKjI0ICYmIHRpbWVzdGFtcCA8IDYwKjYwKjI0KjMwKSB7XG4gICAgICAgICAgICBkYXlzID0gcGFyc2VJbnQodGltZXN0YW1wIC8gNjAgLyA2MCAvIDI0KTtcbiAgICAgICAgICAgIHJldHVybiBkYXlzICsgJ+WkqeWJjSdcbiAgICAgICAgfWVsc2V7XG4gICAgICAgICAgICB2YXIgeWVhciA9IGRhdGUuZ2V0RnVsbFllYXIoKTtcbiAgICAgICAgICAgIHZhciBtb250aCA9IGRhdGUuZ2V0TW9udGgoKSArIDE7XG4gICAgICAgICAgICB2YXIgZGF5ID0gZGF0ZS5nZXREYXRlKCk7XG4gICAgICAgICAgICB2YXIgaG91ciA9IGRhdGUuZ2V0SG91cnMoKTtcbiAgICAgICAgICAgIHZhciBtaW4gPSBkYXRlLmdldE1pbnV0ZXMoKTtcbiAgICAgICAgICAgIGlmIChtb250aD4wICYmIG1vbnRoIDwgMTApIHtcbiAgICAgICAgICAgICAgICBtb250aCA9ICcwJyttb250aFxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGRheT4wICYmIGRheSA8IDEwKSB7XG4gICAgICAgICAgICAgICAgZGF5ID0gJzAnK2RheVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgaWYgKGhvdXI+MCAmJiBob3VyIDwgMTApIHtcbiAgICAgICAgICAgICAgICBob3VyID0gJzAnK2hvdXJcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChtaW4+MCAmJiBtaW4gPCAxMCkge1xuICAgICAgICAgICAgICAgIG1pbiA9ICcwJyttaW5cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiB5ZWFyICsgJy8nICsgbW9udGggKyAnLycgKyBkYXkgKyAnICcgKyBob3VyICsgJzonICsgbWluXG4gICAgICAgICAgICB9XG5cbiAgICB9XG59O1xuXG5cblxuSW5kZXgucHJvdG90eXBlLmxvYWRNb3JlQnRuID0gZnVuY3Rpb24oKXtcbiAgICB2YXIgc2VsZiA9dGhpcztcblxuICAgIHNlbGYubG9hZEJ0bi5jbGljayhmdW5jdGlvbiAoKSB7XG4gICAgICAgIHhmemFqYXguZ2V0KHtcbiAgICAgICAgICAgICd1cmwnOiAnL25ld3MvbGlzdC8nLFxuICAgICAgICAgICAgJ2RhdGEnOiB7XG4gICAgICAgICAgICAgICAgJ3BhZ2UnOiBzZWxmLnBhZ2UsXG4gICAgICAgICAgICAgICAgJ2NhdGVnb3J5X2lkJzogc2VsZi5jYXRlZ29yeV9pZFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICdzdWNjZXNzJzpmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdFsnY29kZSddID09PSAyMDApIHtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGRhdGEgPSByZXN1bHRbJ2RhdGEnXTtcbiAgICAgICAgICAgICAgICAgICAgaWYgKGRhdGEubGVuZ3RoID4gMCl7XG4gICAgICAgICAgICAgICAgICAgICAgICB2YXIgdHBsID0gdGVtcGxhdGUoJ25ld3MtaXRlbScsIHsnbmV3c2VzJzogZGF0YX0pO1xuICAgICAgICAgICAgICAgICAgICAgICAgdmFyIHVsID0gJCgnLmxpc3QtaW5uZXItZ3JvdXAnKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVsLmFwcGVuZCh0cGwpO1xuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5wYWdlKys7XG4gICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBzZWxmLmxvYWRCdG4uaGlkZSgpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgIH0pO1xufTtcblxuXG5JbmRleC5wcm90b3R5cGUubGlzdGVuQ2F0ZWdvcnlTd2l0Y2hFdmVudCA9IGZ1bmN0aW9uKCl7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHZhciB1bCA9ICQoJy5saXN0LXRhYicpO1xuICAgIHVsLmNoaWxkcmVuKCkuY2xpY2soZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgbGkgPSAkKHRoaXMpO1xuICAgICAgICB2YXIgY2F0ZWdvcnlfaWQgPSBsaS5hdHRyKCdkYXRhLWNhdGVnb3J5Jyk7XG4gICAgICAgIHZhciBwYWdlID0gMTtcbiAgICAgICAgc2VsZi5sb2FkQnRuLnNob3coKTtcbiAgICAgICAgeGZ6YWpheC5nZXQoe1xuICAgICAgICAgICAgJ3VybCc6ICcvbmV3cy9saXN0LycsXG4gICAgICAgICAgICAnZGF0YSc6IHtcbiAgICAgICAgICAgICAgICAncGFnZSc6IHBhZ2UsXG4gICAgICAgICAgICAgICAgJ2NhdGVnb3J5X2lkJzogY2F0ZWdvcnlfaWRcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0Wydjb2RlJ10gPT09IDIwMCkge1xuICAgICAgICAgICAgICAgICAgICB2YXIgZGF0YSA9IHJlc3VsdFsnZGF0YSddO1xuICAgICAgICAgICAgICAgICAgICB2YXIgdHBsID0gdGVtcGxhdGUoJ25ld3MtaXRlbScsIHsnbmV3c2VzJzogZGF0YX0pO1xuICAgICAgICAgICAgICAgICAgICB2YXIgdWwgPSAkKCcubGlzdC1pbm5lci1ncm91cCcpO1xuICAgICAgICAgICAgICAgICAgICB1bC5lbXB0eSgpO1xuICAgICAgICAgICAgICAgICAgICB1bC5hcHBlbmQodHBsKTtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5wYWdlID0gMjtcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jYXRlZ29yeV9pZCA9IGNhdGVnb3J5X2lkXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcblxufTtcblxuSW5kZXgucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uKCl7XG4gICAgdGhpcy5sb2FkTW9yZUJ0bigpO1xuICAgIHRoaXMubGlzdGVuQ2F0ZWdvcnlTd2l0Y2hFdmVudCgpO1xufTtcblxuXG5cblxuJChmdW5jdGlvbiAoKSB7XG4gICB2YXIgYmFubmVyID0gbmV3IEJhbm5lcigpO1xuICAgdmFyIHRhYmxlID0gbmV3IE5ld3NUYWIoKTtcbiAgIHZhciBpbmRleCA9IG5ldyBJbmRleCgpO1xuICAgdGFibGUucnVuKCk7XG4gICBiYW5uZXIucnVuKCk7XG4gICBpbmRleC5ydW4oKTtcbn0pOyJdfQ==
