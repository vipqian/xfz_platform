function EditorNews(){}EditorNews.prototype.run=function(){this.listenSumbitEvent(),this.listenUploadFileEvent()},EditorNews.prototype.listenQnUploadFileEvent=function(){var a=this,t=$("#thumbnail-btn");t.change(function(){var r=t[0].files[0];xfzajax.get({url:"/cms/qntoken",success:function(t){if(200===t.code){var e=t.data.token,o=(new Date).getTime()+"."+r.name.split(".")[1],n={fname:o,params:{},mimeType:["image/png","video/x-ms-wmv","image/jpeg"]},i={useCdnDomain:!0,retryCount:6,region:qiniu.region.z2};qiniu.upload(r,o,e,n,i).subscribe({next:a.updateUploadProgress,error:a.uploadErrorEvent,complete:a.complateUploadEvent})}}})})},EditorNews.prototype.updateUploadProgress=function(t){var e=t.total.percent;EditorNews.progressGroup.show();var o=$(".progress-bar"),n=e.toFixed(0)+"%";o.css({width:n}),o.text(n)},EditorNews.prototype.uploadErrorEvent=function(t){EditorNews.progressGroup.hide(),"file type doesn't match with what you specify"===t.message&&window.messageBox.show("上传的文件不匹配")},EditorNews.prototype.complateUploadEvent=function(t){EditorNews.progressGroup.hide();var e=$(".progress-bar");e.css({width:0}),e.text("0%");var o="http://ps9lpfh8q.bkt.clouddn.com/"+t.key;$("#thumbnail-form").val(o)},EditorNews.prototype.listenUploadFileEvent=function(){var o=$("#thumbnail-btn");o.change(function(){var t=o[0].files[0],e=new FormData;e.append("file",t),xfzajax.post({url:"/cms/upload_file/",data:e,processData:!1,contentType:!1,success:function(t){200===t.code&&(url=t.data.url,$("#thumbnail-form").val(url))}})})},EditorNews.prototype.listenSumbitEvent=function(){var p=$("#sub-btn");p.click(function(t){t.preventDefault();var e=p.attr("data-news-id"),o=$("input[name='title']").val(),n=$("input[name='desc']").val(),i=$("input[name='thumbnail']").val(),r=$("select[name='category']").val(),a=$("input[name='author']").val(),s=window.ue.getContent();xfzajax.post({url:"/cms/editor_news/",data:{news_id:e,title:o,desc:n,thumbnail:i,category:r,content:s,author:a},success:function(t){200===t.code&&(window.messageBox.show("编辑成功"),setTimeout(function(){window.location.href="http://127.0.0.1:8000/cms/newsList/"},3e3))}})})},$(function(){(new EditorNews).run(),EditorNews.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImVkaXRvcl9uZXdzLmpzIl0sIm5hbWVzIjpbIkVkaXRvck5ld3MiLCJwcm90b3R5cGUiLCJydW4iLCJ0aGlzIiwibGlzdGVuU3VtYml0RXZlbnQiLCJsaXN0ZW5VcGxvYWRGaWxlRXZlbnQiLCJsaXN0ZW5RblVwbG9hZEZpbGVFdmVudCIsInNlbGYiLCJ1cGxvYWRCdG4iLCIkIiwiY2hhbmdlIiwiZmlsZSIsImZpbGVzIiwieGZ6YWpheCIsImdldCIsInVybCIsInN1Y2Nlc3MiLCJyZXN1bHQiLCJ0b2tlbiIsImtleSIsIkRhdGUiLCJnZXRUaW1lIiwibmFtZSIsInNwbGl0IiwicHV0RXh0cmEiLCJmbmFtZSIsInBhcmFtcyIsIm1pbWVUeXBlIiwiY29uZmlnIiwidXNlQ2RuRG9tYWluIiwicmV0cnlDb3VudCIsInJlZ2lvbiIsInFpbml1IiwiejIiLCJ1cGxvYWQiLCJzdWJzY3JpYmUiLCJuZXh0IiwidXBkYXRlVXBsb2FkUHJvZ3Jlc3MiLCJlcnJvciIsInVwbG9hZEVycm9yRXZlbnQiLCJjb21wbGV0ZSIsImNvbXBsYXRlVXBsb2FkRXZlbnQiLCJyZXNwb25zZSIsInBlcmNlbnQiLCJ0b3RhbCIsInByb2dyZXNzR3JvdXAiLCJzaG93IiwicHJvZ3Jlc3NCYXIiLCJwcm9ncmVzc1RleHQiLCJ0b0ZpeGVkIiwiY3NzIiwid2lkdGgiLCJ0ZXh0IiwiaGlkZSIsIm1lc3NhZ2UiLCJ3aW5kb3ciLCJtZXNzYWdlQm94IiwiaW1nVXJsIiwidmFsIiwiZnJvbURhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCIsInBvc3QiLCJkYXRhIiwicHJvY2Vzc0RhdGEiLCJjb250ZW50VHlwZSIsInN1YkJ0biIsImNsaWNrIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsIm5ld3NfaWQiLCJhdHRyIiwidGl0bGUiLCJkZXNjIiwidGh1bWJuYWlsIiwiY2F0ZWdvcnkiLCJhdXRob3IiLCJjb250ZW50IiwidWUiLCJnZXRDb250ZW50Iiwic2V0VGltZW91dCIsImxvY2F0aW9uIiwi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TSxNQUFuQkEsRUFBYSxPQUNic0MsT0FBT0MsV0FBV1YsS0FBSyxRQUV2QmtDLFdBQVcsV0FBV3pCLE9BQU8wQixTQUFTQyxLQUFLLHVDQUF3QyxZQVF2R3pFLEVBQUUsWUFDbUIsSUFBSVQsWUFDVkUsTUFDWEYsV0FBVzZDLGNBQWdCcEMsRUFBRSIsImZpbGUiOiJlZGl0b3JfbmV3cy5taW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiBFZGl0b3JOZXdzKCkge1xuXG59XG5cbkVkaXRvck5ld3MucHJvdG90eXBlLnJ1biA9IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmxpc3RlblN1bWJpdEV2ZW50KCk7XG4gICAgLy8gdGhpcy5saXN0ZW5RblVwbG9hZEZpbGVFdmVudCgpO1xuICAgIHRoaXMubGlzdGVuVXBsb2FkRmlsZUV2ZW50KCk7XG59O1xuXG5cbi8vIOS4iuS8oOaWh+S7tuWIsOS4g+eJm+S6kVxuRWRpdG9yTmV3cy5wcm90b3R5cGUubGlzdGVuUW5VcGxvYWRGaWxlRXZlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHZhciB1cGxvYWRCdG4gPSAkKCcjdGh1bWJuYWlsLWJ0bicpO1xuICAgIHVwbG9hZEJ0bi5jaGFuZ2UoZnVuY3Rpb24gKCkge1xuICAgICAgICB2YXIgZmlsZSA9IHVwbG9hZEJ0blswXS5maWxlc1swXTtcbiAgICAgICAgeGZ6YWpheC5nZXQoe1xuICAgICAgICAgICAgJ3VybCc6ICcvY21zL3FudG9rZW4nLFxuICAgICAgICAgICAgJ3N1Y2Nlc3MnOiBmdW5jdGlvbiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdFsnY29kZSddID09PSAyMDApe1xuICAgICAgICAgICAgICAgICAgICB2YXIgdG9rZW4gPSByZXN1bHRbJ2RhdGEnXVsndG9rZW4nXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIGtleSA9IChuZXcgRGF0ZSgpLmdldFRpbWUoKSkgKyAnLicgKyBmaWxlLm5hbWUuc3BsaXQoJy4nKVsxXTtcbiAgICAgICAgICAgICAgICAgICAgdmFyIHB1dEV4dHJhID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8g5paH5Lu25ZCNXG4gICAgICAgICAgICAgICAgICAgICAgICBmbmFtZToga2V5LFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g5YW25LuW5Y+C5pWwXG4gICAgICAgICAgICAgICAgICAgICAgICBwYXJhbXM6IHt9LFxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g6ZmQ5Yi255qE5paH5Lu257G75Z6LXG4gICAgICAgICAgICAgICAgICAgICAgICBtaW1lVHlwZTogWydpbWFnZS9wbmcnLCd2aWRlby94LW1zLXdtdicsJ2ltYWdlL2pwZWcnXVxuICAgICAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgICAgICAgICB2YXIgY29uZmlnID0ge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8g5piv5ZCm5Yqg6YCfXG4gICAgICAgICAgICAgICAgICAgICAgICB1c2VDZG5Eb21haW46IHRydWUsXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDlpLHotKXlkI7ku47mlrDkuIrkvKDnmoTmrKHmlbBcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHJ5Q291bnQ6IDYsXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDkuIPniZvlnLDljLpcbiAgICAgICAgICAgICAgICAgICAgICAgIHJlZ2lvbjogcWluaXUucmVnaW9uLnoyXG4gICAgICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgICAgIHZhciBvYnNlcnZhYmxlID0gcWluaXUudXBsb2FkKGZpbGUsIGtleSwgdG9rZW4sIHB1dEV4dHJhLGNvbmZpZyk7XG4gICAgICAgICAgICAgICAgICAgIG9ic2VydmFibGUuc3Vic2NyaWJlKHtcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOS4iuS8oOaWh+S7tui/h+eoi+S4reWRiuivieS9oOS4iuS8oOWkmuWwkVxuICAgICAgICAgICAgICAgICAgICAgICAgXCJuZXh0XCI6c2VsZi51cGRhdGVVcGxvYWRQcm9ncmVzcyxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOS4iuS8oOaWh+S7tuWHuueOsOmUmeivr1xuICAgICAgICAgICAgICAgICAgICAgICAgXCJlcnJvclwiOnNlbGYudXBsb2FkRXJyb3JFdmVudCxcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIOaWh+S7tuS4iuS8oOaIkOWKn+eahOWbnuiwg+WHveaVsFxuICAgICAgICAgICAgICAgICAgICAgICAgXCJjb21wbGV0ZVwiOiBzZWxmLmNvbXBsYXRlVXBsb2FkRXZlbnRcbiAgICAgICAgICAgICAgICAgfSk7XG5cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgfSlcbn07XG5cbkVkaXRvck5ld3MucHJvdG90eXBlLnVwZGF0ZVVwbG9hZFByb2dyZXNzID0gZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgLy8g5LiK5Lyg6L+H56iL5Lit5YGa55qE5LqL5oOFXG4gICAgdmFyIHNlbGYgPSB0aGlzO1xuICAgIHZhciB0b3RhbCA9IHJlc3BvbnNlLnRvdGFsO1xuICAgIHZhciBwZXJjZW50ID0gdG90YWwucGVyY2VudDtcbiAgICB2YXIgcHJvZ3Jlc3NHcm91cCA9IEVkaXRvck5ld3MucHJvZ3Jlc3NHcm91cDtcbiAgICBwcm9ncmVzc0dyb3VwLnNob3coKTtcbiAgICB2YXIgcHJvZ3Jlc3NCYXIgPSAkKCcucHJvZ3Jlc3MtYmFyJyk7XG4gICAgdmFyIHByb2dyZXNzVGV4dCA9IHBlcmNlbnQudG9GaXhlZCgwKSArICclJztcbiAgICBwcm9ncmVzc0Jhci5jc3Moeyd3aWR0aCc6IHByb2dyZXNzVGV4dH0pO1xuICAgIHByb2dyZXNzQmFyLnRleHQocHJvZ3Jlc3NUZXh0KTtcblxufTtcblxuRWRpdG9yTmV3cy5wcm90b3R5cGUudXBsb2FkRXJyb3JFdmVudCA9IGZ1bmN0aW9uIChlcnJvcikge1xuICAgIHZhciBwcm9ncmVzc0dyb3VwID0gRWRpdG9yTmV3cy5wcm9ncmVzc0dyb3VwO1xuICAgIHByb2dyZXNzR3JvdXAuaGlkZSgpO1xuICAgIGlmIChlcnJvci5tZXNzYWdlID09PSAnZmlsZSB0eXBlIGRvZXNuXFwndCBtYXRjaCB3aXRoIHdoYXQgeW91IHNwZWNpZnknKXtcbiAgICAgICAgd2luZG93Lm1lc3NhZ2VCb3guc2hvdygn5LiK5Lyg55qE5paH5Lu25LiN5Yy56YWNJyk7XG4gICAgfVxuXG59O1xuXG5FZGl0b3JOZXdzLnByb3RvdHlwZS5jb21wbGF0ZVVwbG9hZEV2ZW50ID0gZnVuY3Rpb24gKHJlc3BvbnNlKSB7XG4gICAgdmFyIHByb2dyZXNzR3JvdXAgPSBFZGl0b3JOZXdzLnByb2dyZXNzR3JvdXA7XG4gICAgcHJvZ3Jlc3NHcm91cC5oaWRlKCk7XG4gICAgdmFyIHByb2dyZXNzQmFyID0gJCgnLnByb2dyZXNzLWJhcicpO1xuICAgIHByb2dyZXNzQmFyLmNzcyh7J3dpZHRoJzogMH0pO1xuICAgIHByb2dyZXNzQmFyLnRleHQoJzAlJyk7XG5cbiAgICB2YXIgaW1nVXJsID0gJ2h0dHA6Ly9wczlscGZoOHEuYmt0LmNsb3VkZG4uY29tLycrIHJlc3BvbnNlLmtleTtcbiAgICB2YXIgdGh1bWJuYWlsRnJvbSA9ICQoJyN0aHVtYm5haWwtZm9ybScpO1xuICAgIHRodW1ibmFpbEZyb20udmFsKGltZ1VybCk7XG59O1xuXG4vLyDkuIrkvKDmlofku7bliLDoh6rlt7HnmoTmnI3liqHlmahcbkVkaXRvck5ld3MucHJvdG90eXBlLmxpc3RlblVwbG9hZEZpbGVFdmVudCA9IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgdXBsb2FkQnRuID0gJCgnI3RodW1ibmFpbC1idG4nKTtcbiAgICB1cGxvYWRCdG4uY2hhbmdlKGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIGZpbGUgPSB1cGxvYWRCdG5bMF0uZmlsZXNbMF07XG4gICAgICAgIHZhciBmcm9tRGF0YSA9IG5ldyBGb3JtRGF0YSgpO1xuICAgICAgICBmcm9tRGF0YS5hcHBlbmQoJ2ZpbGUnLCBmaWxlKTtcbiAgICAgICAgeGZ6YWpheC5wb3N0KHtcbiAgICAgICAgICAgICd1cmwnOiAnL2Ntcy91cGxvYWRfZmlsZS8nLFxuICAgICAgICAgICAgJ2RhdGEnOiBmcm9tRGF0YSxcbiAgICAgICAgICAgICdwcm9jZXNzRGF0YSc6IGZhbHNlLFxuICAgICAgICAgICAgJ2NvbnRlbnRUeXBlJzogZmFsc2UsXG4gICAgICAgICAgICAnc3VjY2Vzcyc6IGZ1bmN0aW9uIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICBpZiAocmVzdWx0Wydjb2RlJ10gPT09IDIwMCkge1xuICAgICAgICAgICAgICAgICAgICB1cmwgPSByZXN1bHRbJ2RhdGEnXVsndXJsJ107XG4gICAgICAgICAgICAgICAgICAgdmFyIHRodW1ibmFpbEZyb20gPSAkKCcjdGh1bWJuYWlsLWZvcm0nKTtcbiAgICAgICAgICAgICAgICAgICB0aHVtYm5haWxGcm9tLnZhbCh1cmwpXG4gICAgICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB9XG4gICAgICAgIH0pXG5cbiAgICB9KVxufTtcblxuRWRpdG9yTmV3cy5wcm90b3R5cGUubGlzdGVuU3VtYml0RXZlbnQgPSBmdW5jdGlvbiAoKSB7XG4gICAgdmFyIHN1YkJ0biA9ICQoJyNzdWItYnRuJyk7XG4gICAgc3ViQnRuLmNsaWNrKGZ1bmN0aW9uIChldmVudCkge1xuICAgICAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICB2YXIgbmV3c19pZCA9IHN1YkJ0bi5hdHRyKCdkYXRhLW5ld3MtaWQnKTtcbiAgICAgICAgdmFyIHRpdGxlID0gJChcImlucHV0W25hbWU9J3RpdGxlJ11cIikudmFsKCk7XG4gICAgICAgIHZhciBkZXNjID0gJChcImlucHV0W25hbWU9J2Rlc2MnXVwiKS52YWwoKTtcbiAgICAgICAgdmFyIHRodW1ibmFpbCA9ICQoXCJpbnB1dFtuYW1lPSd0aHVtYm5haWwnXVwiKS52YWwoKTtcbiAgICAgICAgdmFyIGNhdGVnb3J5ID0gJChcInNlbGVjdFtuYW1lPSdjYXRlZ29yeSddXCIpLnZhbCgpO1xuICAgICAgICB2YXIgYXV0aG9yID0gJChcImlucHV0W25hbWU9J2F1dGhvciddXCIpLnZhbCgpO1xuICAgICAgICB2YXIgY29udGVudCA9IHdpbmRvdy51ZS5nZXRDb250ZW50KCk7XG5cbiAgICAgICAgeGZ6YWpheC5wb3N0KHtcbiAgICAgICAgICAgICd1cmwnOiAnL2Ntcy9lZGl0b3JfbmV3cy8nLFxuICAgICAgICAgICAgJ2RhdGEnOiB7XG4gICAgICAgICAgICAgICAgJ25ld3NfaWQnOiBuZXdzX2lkLFxuICAgICAgICAgICAgICAgICd0aXRsZSc6IHRpdGxlLFxuICAgICAgICAgICAgICAgICdkZXNjJzogZGVzYyxcbiAgICAgICAgICAgICAgICAndGh1bWJuYWlsJzogIHRodW1ibmFpbCxcbiAgICAgICAgICAgICAgICAnY2F0ZWdvcnknOiBjYXRlZ29yeSxcbiAgICAgICAgICAgICAgICAnY29udGVudCc6IGNvbnRlbnQsXG4gICAgICAgICAgICAgICAgJ2F1dGhvcic6IGF1dGhvclxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICdzdWNjZXNzJzogZnVuY3Rpb24gKHJlc3VsdCkge1xuICAgICAgICAgICAgICAgIGlmIChyZXN1bHRbJ2NvZGUnXSA9PT0gMjAwKSB7XG4gICAgICAgICAgICAgICAgICAgIHdpbmRvdy5tZXNzYWdlQm94LnNob3coJ+e8lui+keaIkOWKnycpO1xuXG4gICAgICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKXt3aW5kb3cubG9jYXRpb24uaHJlZj1cImh0dHA6Ly8xMjcuMC4wLjE6ODAwMC9jbXMvbmV3c0xpc3QvXCI7fSwzMDAwKVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9KTtcbn07XG5cblxuJChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGVkaXRvck5ld3MgPSBuZXcgRWRpdG9yTmV3cygpO1xuICAgIGVkaXRvck5ld3MucnVuKCk7XG4gICAgRWRpdG9yTmV3cy5wcm9ncmVzc0dyb3VwID0gJCgnI3Byb2dyZXNzLWdyb3VwJyk7XG59KTtcbiJdfQ==
