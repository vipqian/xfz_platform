function AddCourse(){}AddCourse.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},AddCourse.prototype.listenQnUploadFileEvent=function(){var s=this,e=$("#thumbnail-btn");e.change(function(){var i=e[0].files[0];xfzajax.get({url:"/cms/qntoken",success:function(e){if(200===e.code){var o=e.data.token,t=(new Date).getTime()+"."+i.name.split(".")[1],r={fname:t,params:{},mimeType:["image/png","video/x-ms-wmv","image/jpeg"]},n={useCdnDomain:!0,retryCount:6,region:qiniu.region.z2};qiniu.upload(i,t,o,r,n).subscribe({next:s.updateUploadProgress,error:s.uploadErrorEvent,complete:s.complateUploadEvent})}}})})},AddCourse.prototype.updateUploadProgress=function(e){var o=e.total.percent;AddCourse.progressGroup.show();var t=$(".progress-bar"),r=o.toFixed(0)+"%";t.css({width:r}),t.text(r)},AddCourse.prototype.uploadErrorEvent=function(e){AddCourse.progressGroup.hide(),"file type doesn't match with what you specify"===e.message&&window.messageBox.show("上传的文件不匹配")},AddCourse.prototype.complateUploadEvent=function(e){AddCourse.progressGroup.hide();var o=$(".progress-bar");o.css({width:0}),o.text("0%");var t="http://ps9lpfh8q.bkt.clouddn.com/"+e.key;$("#thumbnail-form").val(t)},AddCourse.prototype.listenSumbitEvent=function(){$("#sub-btn").click(function(e){e.preventDefault();var o=$("input[name='title']").val(),t=$("select[name='category']").val(),r=$("select[name='teacher']").val(),n=$("input[name='voideUrl']").val(),i=$("input[name='coverUrl']").val(),s=$("input[name='price']").val(),a=$("input[name='duration']").val(),u=window.ue.getContent();xfzajax.post({url:"/cms/add_course/",data:{title:o,category:t,teacher:r,video_url:n,cover_url:i,price:s,duration:a,profile:u},success:function(e){if(console.log(e),200===e.code)window.messageBox.show("发布成功"),setTimeout(function(){window.location.href="http://129.28.158.195:8000/cms/course_list/"},3e3);else{var o=e.message;if("string"==typeof o||"String"==o.constructor)window.messageBox.show(e.message);else for(var t in o){var r=o[t][0];window.messageBox.show(r)}}}})})},AddCourse.prototype.run=function(){this.initUEditor(),this.listenQnUploadFileEvent(),this.listenSumbitEvent()},$(function(){(new AddCourse).run(),AddCourse.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
