function AddTeacher(){}AddTeacher.prototype.listenUploadFileEvent=function(){var o=$("#thumbnail-btn");o.change(function(){var e=o[0].files[0],t=new FormData;t.append("file",e),xfzajax.post({url:"/cms/upload_file/",data:t,processData:!1,contentType:!1,success:function(e){200===e.code&&(url=e.data.url,$("#thumbnail-form").val(url))}})})},AddTeacher.prototype.initUEditor=function(){window.ue=UE.getEditor("editor",{initialFrameHeight:400,serverUrl:"/ueditor/upload/"})},AddTeacher.prototype.listenQnUploadFileEvent=function(){var i=this,e=$("#thumbnail-btn");e.change(function(){var r=e[0].files[0];xfzajax.get({url:"/cms/qntoken",success:function(e){if(200===e.code){var t=e.data.token,o=(new Date).getTime()+"."+r.name.split(".")[1],a={fname:o,params:{},mimeType:["image/png","video/x-ms-wmv","image/jpeg"]},n={useCdnDomain:!0,retryCount:6,region:qiniu.region.z2};qiniu.upload(r,o,t,a,n).subscribe({next:i.updateUploadProgress,error:i.uploadErrorEvent,complete:i.complateUploadEvent})}}})})},AddTeacher.prototype.updateUploadProgress=function(e){var t=e.total.percent;AddTeacher.progressGroup.show();var o=$(".progress-bar"),a=t.toFixed(0)+"%";o.css({width:a}),o.text(a)},AddTeacher.prototype.uploadErrorEvent=function(e){AddTeacher.progressGroup.hide(),"file type doesn't match with what you specify"===e.message&&window.messageBox.show("上传的文件不匹配")},AddTeacher.prototype.complateUploadEvent=function(e){AddTeacher.progressGroup.hide();var t=$(".progress-bar");t.css({width:0}),t.text("0%");var o="http://ps9lpfh8q.bkt.clouddn.com/"+e.key;$("#thumbnail-form").val(o)},AddTeacher.prototype.listenSumbitEvent=function(){$("#sub-btn").click(function(e){e.preventDefault();var t=$("input[name='name']").val(),o=$("input[name='jobtitle']").val(),a=$("input[name='avatar']").val(),n=window.ue.getContent();console.log(t,o,a,n),xfzajax.post({url:"/cms/add_teacher/",data:{name:t,jobtitle:o,avatar:a,profile:n},success:function(e){if(console.log(e),200===e.code)window.messageBox.show("发布成功"),setTimeout(function(){window.location.href="http://129.28.158.195:8000/cms/teacher_list/"},3e3);else{var t=e.message;if("string"==typeof t||"String"==t.constructor)window.messageBox.show(e.message);else for(var o in t){var a=t[o][0];window.messageBox.show(a)}}}})})},AddTeacher.prototype.run=function(){this.initUEditor(),this.listenUploadFileEvent(),this.listenSumbitEvent()},$(function(){(new AddTeacher).run(),AddTeacher.progressGroup=$("#progress-group")});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
